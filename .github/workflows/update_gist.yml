name: Güncelleyici

on:
  schedule:
    - cron: "*/5 * * * *"   # Her 5 dakikada bir çalışır
  workflow_dispatch:

permissions:
  contents: read

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: python3 -m pip install --upgrade yt-dlp requests

      - name: Prepare cookies
        env:
          COOKIES_CONTENT: ${{ secrets.YT_COOKIES }}
        run: |
          if [ -n "$COOKIES_CONTENT" ]; then
            echo "$COOKIES_CONTENT" > cookies.txt
          fi

      - name: Normalize channels.txt
        run: |
          if [ -f channels.txt ]; then
            tr -d '\r' < channels.txt > channels_unix.txt
            mv channels_unix.txt channels.txt
          else
            echo "channels.txt bulunamadı!"
            exit 1
          fi

      - name: Merge/update live.m3u with existing Gist
        env:
          GIST_ID: ${{ secrets.GIST_ID }}
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
        run: |
          set -e

          if [ -z "$GIST_ID" ] || [ -z "$GIST_TOKEN" ]; then
            echo "GIST_ID veya GIST_TOKEN eksik, işlem durduruldu."
            exit 0
          fi

          EXISTING=$(curl -s -H "Authorization: token $GIST_TOKEN" \
            "https://api.github.com/gists/$GIST_ID" \
            | python3 -c "import sys,json; print(json.load(sys.stdin)['files']['live.m3u']['content'])" \
            || echo "#EXTM3U\n")

          echo "$EXISTING" > live.m3u

          python3 test_work.py

          # Remove cookies securely
          [ -f cookies.txt ] && rm -f cookies.txt

      - name: Update Gist
        env:
          GIST_ID: ${{ secrets.GIST_ID }}
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
        run: |
          CONTENT_JSON=$(python3 -c "import json; print(json.dumps(open('live.m3u','r',encoding='utf-8').read()))")

          PAYLOAD="{\"files\":{\"live.m3u\":{\"content\":$CONTENT_JSON}}}"

          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" \
            -X PATCH \
            -H "Authorization: token ${GIST_TOKEN}" \
            -H "Content-Type: application/json" \
            -d "${PAYLOAD}" \
            "https://api.github.com/gists/${GIST_ID}")

          echo "Gist update HTTP status: $HTTP_STATUS"
